HTML : 웹사이트의 뼈대
Markup : 문서나 데이터를 처리하기위해 문서에 추가되는 정보
<a> </a>
<a />

MultiPageApplication / SinglePageApplication

CSS

JavaScript
정식명칭: ECMAScript
버전: ES[vertion]

Script Language
Runtime에 코드해석 시작됨

표준: ES5, ES6

Data Type(자료형)
Dynamic Typing(동적 타이핑)
: 변수에 데이터가 대입될때 자료형이 정해짐

var / let

Number: 11 , 1.1
String: "" , ''
Boolean: true , false
Null: null
Undefined: undefined
Array: [,] -> []
Object: {:,} -> [] , .
;

Operator(연산자)
=
+-*/% **
+=
++
<=
!=
===
&&
||
?:

함수
Funcion statement
function () {
    return;
}

Arrow funciton expression
const A = () => {
    return;
}

Node js
: JavaScript runtime(js로 네트워크 애플리케이션 개발)
npm
: node js 를 위한 패키지 매니저(버전,의존성 관리, 패키지 설치 삭제 도움(node js 와 함께 설치됨))

LTS
: 안정화 버전

node -v
npm -v

IDE: 통합 개발 환경

React
: 사용자 인터페이스를 만들기 위한 JS 라이브러리(기능모음집),SPA
UI : 사용자와 컴퓨터의 상호작용을 돕는 것

프레임워크: 프로그램 흐름에대한 제어권한이 프레임워크에 있음
라이브러리: 제어권한이 개발자에게 있음

장점
빠른 업데이트 & 렌더링 속도
-> virtual dom
DocumentObjectModel
: 웹페이지를 정의 하는 하나의 객체(하나의 웹사이트에 대한 모든 정보를 담고있는 큰 그릇)

화면 업데이트 -> DOM 수정
최소한의 돔만 수정

컴포넌트 기반의 구조
(java의 객체)
-> 재사용성↑
: 개발기간 단축, 유지보수 용이

활발한 지식공유&커뮤니티

모바일개발 : React Native 로 가능

<link rel="stylesheet" href=".css">

npm/npx create-react-app my-app
cd my-app
npm start

JSX : JS 확장 문법 : JS + XML/HTML
JSX: const A = <h1></h1>;
-> JS: React.createElement('h1',null,null);

XML/HTML{JS}XML/HTML

엘리먼트 : 요소, 성분
: 리액의앱의 가작 작은 블럭들

dom elements : html

자바스크립트 객체 : elements

react elements : virtual dom
: js 객체 형태로 존재

